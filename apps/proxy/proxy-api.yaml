openapi: "3.0.0"

info:
  version: 0.1.0
  title: Monitor Proxy API
  description: Basic API proxy for Monitor

servers:
  - url: http://localhost:4000

tags:
  - name: site
    description: handles sites that are added
  - name: check
    description: checks the sites added
  - name: status
    description: shows the current status of all sites

paths:
  /proxy-api.yaml:
    get:
      operationId: getProxy
      responses:
        default:
          description: returns the proxy API schema
          content:
            application/file:
              schema:
                $ref: "#/components/schemas/AnyValue"
  /doc:
    get:
      operationId: getDoc
      responses:
        default:
          description: get the documentation for proxy api
          content:
            application/html:
              schema:
                $ref: "#/components/schemas/AnyValue"
  /api/v1/site/add:
    post:
      tags:
        - site
      description: adds a site to be monitored
      operationId: addSite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SiteAddRequest"
      responses:
        "201":
          description: site response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteAddResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResult"
  /api/v1/site/list:
    get:
      tags:
        - site
      description: Gets a list sites
      operationId: getSites
      responses:
        "200":
          description: site response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteListResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResult"

  /api/v1/site/get/{id}:
    get:
      tags:
        - site
      description: Gets a site
      operationId: getSite
      parameters:
        - name: id
          in: path
          description:
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Site response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResult"

  /api/v1/site/delete/{id}:
    delete:
      tags:
        - site
      description: deletes a site
      operationId: deleteSite
      parameters:
        - name: id
          in: path
          description:
          required: true
          schema:
            type: integer
            format: integer
      responses:
        "200":
          description: Site response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResult"

  /api/v1/check/{id}:
    get:
      tags:
        - check
      description: Checks one specified site
      operationId: checkSite
      parameters:
        - name: id
          in: path
          description:
          required: true
          schema:
            type: integer
            format: integer
      responses:
        "200":
          description: check response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResult"

  /api/v1/check/all:
    get:
      tags:
        - check
      description: checks all the sites
      operationId: checkSites
      responses:
        "200":
          description: check response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteGetResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResult"

  /api/v1/status:
    get:
      tags:
        - status
      description: returns the status of all sites
      operationId: Status
      responses:
        "200":
          description: status response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResult"

components:
  schemas:
    ErrorResult:
      type: object
      required:
        - error
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string

    AnyValue:
      anyOf:
        - type: string
        - type: number
        - type: integer
        - type: boolean
        - type: array
          items: {}
        - type: object

    Site:
      type: object
      required:
        - id
        - url
        - name
      properties:
        id:
          type: integer
        Url:
          type: string
        Name:
          type: string

    Status:
      type: object
      properties:
        up:
          type: boolean
          description: Indicates whether the site is up or not.
        checkedAt:
          type: string
          description: Time when the site was last checked.
      required:
        - up
        - checkedAt

    Check:
      type: object
      properties:
        up:
          type: boolean
    # HTTP Models
    SiteGetResponse:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorResult"
        result:
          type: object
          properties:
            site:
              $ref: "#/components/schemas/Site"

    SiteListResponse:
      type: object
      properties:
        sites:
          type: array
          items:
            $ref: "#/components/schemas/Site"
      required:
        - sites

    SiteAddRequest:
      type: object
      required:
        - url
      properties:
        url:
          type: string
        name:
          type: string

    SiteAddResponse:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorResult"
        result:
          type: object
          required:
            - site
          properties:
            site:
              $ref: "#/components/schemas/Site"

    CheckResponse:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorResult"
        result:
          type: object
          properties:
            check:
              $ref: "#/components/schemas/Check"

    StatusResponse:
      type: object
      properties:
        sites:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Status'
      required:
        - sites
